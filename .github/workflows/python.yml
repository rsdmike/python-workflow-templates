# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
      - name: Test with pytest
        run: |
          pytest --junitxml=junit.xml
      - name: Check Coverage
        run: |
          pip install coverage
          coverage run -m unittest
      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: success() || failure() # run this step even if previous step failed
      #   continue-on-error: true
      #   with:
      #     name: Tests # Name of the check run which will be created
      #     path: junit.xml # Path to test results
      #     reporter: jest-junit # Format of test results
      #     fail-on-error: "false"
      - uses: codecov/codecov-action@894ff025c7b54547a9a2a1e9f228beae737ad3c2 # v3.1.3
        name: Upload Coverage Results
        if: ${{ matrix.python-version == '3.10' }}
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: junit.xml
